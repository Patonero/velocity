name: Build and Tag

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "docs/**"
      - ".gitignore"
      - "Claude.md"
  workflow_dispatch:

env:
  SKIP_CI: ${{ contains(github.event.head_commit.message, '[skip ci]') }}

jobs:
  build-and-tag:
    runs-on: windows-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build TypeScript
        run: npm run build

      - name: Install Electron Builder
        run: npm install -g electron-builder

      - name: Check for application icon
        run: |
          if (!(Test-Path "assets\icon.png")) {
            Write-Host "Warning: No application icon found at assets\icon.png"
            Write-Host "A default icon will be used. Add your icon to assets\icon.png for branding."
          } else {
            Write-Host "Application icon found at assets\icon.png"
          }
        shell: powershell

      - name: Package Electron app
        run: electron-builder --win --publish never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate build tag
        id: build-tag
        run: |
          $timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
          $commitHash = git rev-parse --short HEAD
          $buildTag = "build-$timestamp-$commitHash"
          echo "tag=$buildTag" >> $env:GITHUB_OUTPUT
          echo "Generated build tag: $buildTag"
        shell: powershell

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create and push tag
        run: |
          $buildTag = "${{ steps.build-tag.outputs.tag }}"
          git tag $buildTag
          git push origin $buildTag
          echo "Created and pushed tag: $buildTag"
        shell: powershell
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: velocity-launcher-${{ steps.build-tag.outputs.tag }}
          path: |
            dist/*.exe
            dist/*.zip
            dist/*.msi
          retention-days: 30
