name: Build and Tag

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
      - "docs/**"
      - ".gitignore"
      - "Claude.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SKIP_CI: ${{ contains(github.event.head_commit.message, '[skip ci]') }}

jobs:
  build-and-tag:
    permissions:
      contents: write
      id-token: write
    runs-on: windows-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build TypeScript
        run: npm run build

      - name: Install Electron Builder
        run: npm install -g electron-builder

      - name: Check for application icon
        run: |
          if (!(Test-Path "assets\icon.png")) {
            Write-Host "Warning: No application icon found at assets\icon.png"
            Write-Host "A default icon will be used. Add your icon to assets\icon.png for branding."
          } else {
            Write-Host "Application icon found at assets\icon.png"
          }
        shell: powershell

      - name: Package Electron app
        run: electron-builder --win --publish never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate build tag and get version
        id: build-tag
        run: |
          $timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
          $commitHash = git rev-parse --short HEAD
          $packageJson = Get-Content package.json | ConvertFrom-Json
          $version = $packageJson.version
          $buildTag = "v$version-$commitHash"
          echo "tag=$buildTag" >> $env:GITHUB_OUTPUT
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "Generated build tag: $buildTag"
          echo "Package version: $version"
        shell: powershell

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create and push tag
        run: |
          $buildTag = "${{ steps.build-tag.outputs.tag }}"
          $buildVersion = "${{ steps.build-tag.outputs.version }}"
          git tag $buildTag -m "Release version $buildVersion - Build $buildTag"
          git push origin $buildTag
          echo "Created and pushed tag: $buildTag"
        shell: powershell
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.build-tag.outputs.tag }}
          name: "v${{ steps.build-tag.outputs.tag }}"
          body: |
            ## Automated Build Release

            **Build Information:**
            - Version: ${{ steps.build-tag.outputs.version }}
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
            - Timestamp: ${{ steps.build-tag.outputs.tag }}

            **Included Files:**
            - Windows Installer - `velocity-${{ steps.build-tag.outputs.version }}-x64.exe`
            - Portable Executable - `velocity-${{ steps.build-tag.outputs.version }}-portable.exe`
            - Zip Archive - `velocity-${{ steps.build-tag.outputs.version }}-x64.zip`

            ### Download Instructions:
            - **For most users**: Download the Windows Installer
            - **For portable use**: Download the Portable executable
            - **For manual extraction**: Download the Zip archive
          draft: false
          prerelease: true
          files: |
            dist/velocity-${{ steps.build-tag.outputs.version }}-x64.exe
            dist/velocity-${{ steps.build-tag.outputs.version }}-portable.exe
            dist/velocity-${{ steps.build-tag.outputs.version }}-x64.zip
            dist/latest.yml
            dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts (backup)
        uses: actions/upload-artifact@v4
        with:
          name: velocity-launcher-${{ steps.build-tag.outputs.tag }}
          path: |
            dist/*.exe
            dist/*.zip
            dist/*.msi
            dist/latest.yml
            dist/*.blockmap
          retention-days: 30
